name: Deploy Cloudflare Pages

on:
  workflow_call:
    inputs:
      pages_name:
        description: 'Name to use for pages deployment'
        required: true
        type: string
      worker_url:
        description: 'URL of Worker deployment'
        required: true
        type: string
    outputs:
      pages_url:
        value: ${{ jobs.deploy.outputs.pages_url }}
        description: The URL of the Pages deployment

jobs:
  deploy:
    name: Deploy Pages
    runs-on: ubuntu-latest
    outputs:
      pages_url: ${{ steps.get_pages_url.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Cloudflare Workers CLI
        run: |
          npm install -g wrangler

      - name: Deploy webapp to Cloudflare Pages
        working-directory: ./webapp
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          VITE_BACKEND_URL: ${{ inputs.worker_url }}
        run: |
          npm install
          npm run build
          wrangler pages project create ${{ inputs.pages_name }} --production-branch main || true
          wrangler pages deploy ./dist --project-name ${{ inputs.pages_name }}
 
      - name: Call CloudFlare API to find Pages URL
        id: get_pages_url
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          curl -X GET https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/pages/projects/${{ inputs.pages_name }} \
          -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" | jq -r '.result.subdomain' | echo url=https://$(cat) >> $GITHUB_OUTPUT
